@model DirectKeyDashboard.Charting.Domain.BarChart

@{
    var canvasID = "bar-chart-canvas";
    var labelsGlobal = "barLabels";
    var valuesGlobal = "barValues";
    var backgroundColorsGlobal = "barBackgroundColors";
    var borderColorsGlobal = "barBorderColors";
}

<div class="chart-container" style="position:relative; width:60vw; margin-left:auto; margin-right:auto">
    <canvas id="@(Html.Raw(canvasID))"></canvas>
</div>

@*Inject CS variables as JSON strings, then parse into JS objects*@

<script type="text/javascript">
    @(Html.Raw(labelsGlobal)) = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Bars.Select(b => b.Label).ToList()))');
    @(Html.Raw(valuesGlobal)) = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Bars.Select(b => b.Value).ToList()))');
    @(Html.Raw(backgroundColorsGlobal)) = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Bars.Select(b => b.BackgroundColor).ToList()))');
    @(Html.Raw(borderColorsGlobal)) = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Bars.Select(b => b.BorderColor).ToList()))');
</script>

<script defer src="~/js/bar-chart.js" data-canvas-id="@Html.Raw(canvasID)"
                                                  data-chart-label="@Html.Raw(Model.Label)"
                                                  data-bar-border-width="1"
                                                  data-labels-global="@Html.Raw(labelsGlobal)"
                                                  data-values-global="@Html.Raw(valuesGlobal)"
                                                  data-background-colors-global="@Html.Raw(backgroundColorsGlobal)"
                                                  data-border-colors-global="@Html.Raw(borderColorsGlobal)"></script>